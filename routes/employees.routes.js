import express from 'express';
import {
  signup,
  login,
  activateEmployee,
  getPendingEmployees,
  getActiveEmployees
} from '../controllers/employee.controller.js';

import Employee from '../models/Employee.js';

const router = express.Router();

// üîê ÿ™ÿ≥ÿ¨ŸäŸÑ ŸÖŸàÿ∏ŸÅ ÿ¨ÿØŸäÿØ
router.post('/signup', signup);

// üîê ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ
router.post('/login', login);

// ‚úÖ ÿ™ŸÅÿπŸäŸÑ ŸÖŸàÿ∏ŸÅ ÿ®Ÿàÿßÿ≥ÿ∑ÿ© ÿßŸÑŸÖÿ¥ÿ±ŸÅ ÿßŸÑÿ£ÿπŸÑŸâ
router.patch('/activate/:id', activateEmployee);

// üïí ÿπÿ±ÿ∂ ÿßŸÑŸÖŸàÿ∏ŸÅŸäŸÜ ÿ∫Ÿäÿ± ÿßŸÑŸÖŸÅÿπŸÑŸäŸÜ
router.get('/pending', getPendingEmployees);

// ‚úÖ ÿπÿ±ÿ∂ ÿßŸÑŸÖŸàÿ∏ŸÅŸäŸÜ ÿßŸÑŸÖŸÅÿπŸëŸÑŸäŸÜ ŸÅŸÇÿ∑
router.get('/active', getActiveEmployees);

// üß™ ÿ¨ŸÑÿ® ŸÉŸÑ ÿßŸÑŸÖŸàÿ∏ŸÅŸäŸÜ (ŸÑŸÑÿ™ÿ¨ÿ±ÿ®ÿ© ŸÅŸÇÿ∑)
router.get('/all', async (req, res) => {
  try {
    const employees = await Employee.find();
    const formatted = employees.map(emp => ({
      id: emp._id,
      name: emp.name,
      email: emp.email,
      role: emp.role,
      isApproved: emp.isApproved
    }));
    res.json({ success: true, data: formatted });
  } catch (err) {
    res.status(500).json({ success: false, message: '‚ùå Failed to fetch employees' });
  }
});

export default router;
